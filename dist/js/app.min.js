(()=>{"use strict";class t{constructor(t="",e=""){this.modalId=t,this.title=e}renderModal(t=""){this.modalElement=document.createElement("div"),this.modalElement.classList.add("modal","fade","text-center"),this.modalElement.setAttribute("id",this.modalId),this.modalElement.setAttribute("tabindex","-1"),this.modalElement.setAttribute("role","dialog"),this.modalElement.setAttribute("aria-hidden","true");const e=document.createElement("div");e.classList.add("modal-dialog");const s=document.createElement("div");s.classList.add("modal-content");const n=document.createElement("div");n.classList.add("modal-header"),n.innerHTML=`<h5 class="modal-title">${this.title}</h5>\n  <button type="button" id="btn-close-modal" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>`;const a=document.createElement("div");return a.classList.add("modal-body"),a.append(t),s.appendChild(n),s.appendChild(a),e.appendChild(s),this.modalElement.appendChild(e),this.modalElement}}class e{constructor(t,e,s=""){this.submitFunction=e,this.formId=s,this.submitButtonName=t}renderForms(t){this.form=document.createElement("form"),this.form.setAttribute("id",this.formId);const e=document.createElement("button");return e.id="submit",e.type="submit",e.classList.add("btn","btn-lg","btn-primary","w-100"),e.innerText=this.submitButtonName,this.form.append(t,e),this.form.addEventListener("submit",this.submitFunction),this.form}}class s extends e{constructor(t,e,s=""){super(t,e,s)}renderFormsLoginContent(){const t=document.createElement("div");return t.classList.add("form-signin","w-100","m-auto"),t.innerHTML='\n        <img class="mb-4 justify-content-center"\n              src="./dist/img/medicine-logo.png"\n              alt="logo" width="72"\n              height="57" />\n        <h1 class="h3 mb-3 fw-normal">Please sign in</h1>\n        <div class="form-floating">\n        <input id="input-email"\n         name="email"\n         type="email"\n         class="form-control mb-3"\n         placeholder="name@example.com"\n         required />\n        <label for="input-email">Email address</label>\n        </div>\n        <div class="form-floating">\n        <input type="password"\n        name="password"\n        class="form-control mb-3"\n        id="floatingPassword"\n        placeholder="Password"\n        required />\n        <label\n        for="floatingPassword">Password</label>\n        </div>\n        <div class="checkbox mb-3">\n        <label> <input type="checkbox"\n                value="remember-me"\n                id="rememberme"/> <span>Remember me</span></label>\n        </div>',t}}class n{tokenRequest(t,e){return fetch("https://ajax.test-danit.com/api/v2/cards/login",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:t,password:e})})}getCards(t){return fetch("https://ajax.test-danit.com/api/v2/cards",{method:"GET",headers:{Authorization:`Bearer ${t}`}}).then((t=>t.json()))}createCard(t,e){return fetch("https://ajax.test-danit.com/api/v2/cards",{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${t}`},body:JSON.stringify(e)}).then((t=>t.json()))}editCard(t,e,s){return fetch(`https://ajax.test-danit.com/api/v2/cards/${e}`,{method:"PUT",headers:{"Content-Type":"application/json",Authorization:`Bearer ${t}`},body:JSON.stringify(s)}).then((t=>t.json()))}deleteCard(t,e){return fetch(`https://ajax.test-danit.com/api/v2/cards/${e}`,{method:"DELETE",headers:{Authorization:`Bearer ${t}`}}).then((t=>t))}}function a(t){const{id:e,name:s,doctor:n,status:a,priority:o}=t;return`\n<div id="${e}" class="card h-100 bg-light" data-doctor="${n}" data-status="${a}" data-priority="${o}">\n  <div class="card-body">\n    <h5 class="card-title text-center bg-dark text-light">Visit: <span class="card-title">${e}</span></h5>\n    <p class="card-text"><strong>Patient: </strong><span class="card-text" data-name="${s}">${s}</span></p>\n    <p class="card-text"><strong>Doctor: </strong><span class="card-text" data-doctor="${n}">${n}</span></p>\n    <div class="full-content d-none"></div>\n  </div>\n  <div class="card-footer d-flex justify-content-between align-items-center">\n    <button class="btn btn-primary me-auto show-more">Show More</button>\n    <div class="btn-group" role="group">\n      <button type="button" class="btn card-edit" data-bs-toggle="modal" data-bs-target="#modal-create-visit">\n        <svg style="color: rgb(25, 27, 26);" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor"\n          class="card-edit" viewBox="0 0 16 16">\n          <path class="card-edit"\n              d="M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z"\n              fill="blue"></path>\n          <path class="card-edit" fill-rule="evenodd"\n              d="M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z"\n              fill="blue"></path>\n        </svg>\n      </button>\n      <button type="button" class="btn card-del">\n        <svg style="color: black" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor"\n          class="card-del" viewBox="0 0 16 16">\n          <path class="card-del"\n              d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z"\n              fill="red"></path>\n          <path class="card-del" fill-rule="evenodd"\n              d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z"\n              fill="red"></path>\n      </svg>\n      </button>\n    </div>\n  </div>\n</div>`}function o(t){return async function(e){if(confirm("A You Sure?")){let s=e.target;const n=s.closest(".wrapper-card"),a=s.closest(".card").id;if(200===(await I.deleteCard(t,a)).status){const t=n.closest(".cards");n.remove(),t.innerHTML.trim()||v.messageEmpty.classList.replace("d-none","d-block")}else alert("sory try later")}}}function i(t){const e=t.target,s=e.closest(".card").querySelector(".full-content");s.matches(".d-none")?(s.classList.replace("d-none","d-block"),e.textContent="Show Less"):(s.classList.replace("d-block","d-none"),e.textContent="Show More")}const d=document.getElementById("visit-form"),r=document.querySelector("h4.modal-header_title"),l=document.getElementById("modal-create-visit");class c{constructor(t,e){this.visitForm=t,this.modal=e,this.selectDoctors=document.querySelectorAll(".select-doctors")[0],this.lastVisitInput=document.getElementById("lastVisit"),this.phoneInput=document.getElementById("phone")}getElements(){}init(){this.visitForm.addEventListener("submit",(t=>{t.preventDefault(),this.submit()}));const t=["+","Backspace","Delete","Escape"];this.phoneInput.addEventListener("keydown",(function(e){return!(!t.includes(e.key)&&!/\d/.test(e.key)&&(e.preventDefault(),1))})),this.showInputs(),this.modal.querySelector(".btn-close").addEventListener("click",(()=>{this.visitForm.reset(),r.textContent="Create Visit",this.showInputs()})),this.modal.querySelector("#clear-btn").addEventListener("click",(()=>{this.showInputs(),r.textContent="Create Visit"})),document.addEventListener("keydown",(function(t){27===t.keyCode&&(d.reset(),u.showInputs(),r.textContent="Create Visit")}))}showInputs(){this.titleInput=this.modal.querySelectorAll(".title")[0],this.priorityInputs=this.modal.querySelectorAll('input[name="priority"]'),this.nameInput=document.getElementById("name"),this.submitBtn=document.getElementById("submit-btn"),this.dateInput=document.getElementById("date"),this.dateTitle=document.getElementById("dateTitle"),this.ageInput=document.getElementById("age"),this.descriptionInput=document.getElementById("description"),this.bmiInput=document.getElementById("bodyMassIndex"),this.dofheartInput=document.getElementById("diseasesOfHeart"),this.pressureInput=document.getElementById("pressure"),this.selectDoctors.style.display="block",this.titleInput.style.display="block",this.priorityInputs.forEach((t=>{t.style.display="block"})),this.submitBtn.style.display="block",this.nameInput.style.display="none",this.phoneInput.style.display="none",this.dateInput.style.display="none",this.dateTitle.style.display="none",this.ageInput.style.display="none",this.descriptionInput.style.display="none",this.bmiInput.style.display="none",this.dofheartInput.style.display="none",this.pressureInput.style.display="none",this.lastVisitInput.style.display="none"}submit(){const t=new FormData(this.visitForm),e={name:t.get("name"),doctor:t.get("doctor"),purpose:t.get("purpose"),priority:t.get("priority"),phone:t.get("phone"),date:t.get("date"),status:"open",age:t.get("age"),description:t.get("description"),bodyMassIndex:t.get("bodyMassIndex"),diseasesOfHeart:t.get("diseasesOfHeart"),pressure:t.get("pressure"),lastVisit:t.get("lastVisit")},s=this.checkDate(e.date);if(e.status=s,this.closeModal=this.modal.querySelector(".btn-close"),r.textContent="Create Card",d.dataset.editId){const t=d.dataset.editId;v.editCard(E,t,e),d.removeAttribute("data-edit-id")}else v.createCard(E,e);this.closeModal.click()}checkDate(t){const e=new Date;return new Date(t)<e?"Done":"Open"}}const u=new c(d,l);u.init();const p=new class extends c{constructor(){super(),this.nameInput=document.getElementById("name"),this.phoneInput=document.getElementById("phone"),this.dateInput=document.getElementById("date"),this.dateTitle=document.getElementById("dateTitle"),this.ageInput=document.getElementById("age"),this.bodyMassIndexInput=document.getElementById("bodyMassIndex"),this.dofheartInput=document.getElementById("diseasesOfHeart"),this.pressureInput=document.getElementById("pressure"),this.descriptionInput=document.getElementById("description"),this.selectDoctors.addEventListener("change",(()=>{"therapist"===this.selectDoctors.options[this.selectDoctors.selectedIndex].value&&this.showTherapistFields()}))}showTherapistFields(){this.nameInput.style.display="block",this.phoneInput.style.display="block",this.dateInput.style.display="block",this.dateTitle.style.display="block",this.ageInput.style.display="block",this.descriptionInput.style.display="block",this.lastVisitInput.style.display="none",this.lastVisitInput.value="",this.bodyMassIndexInput.style.display="none",this.bodyMassIndexInput.value="",this.dofheartInput.style.display="none",this.dofheartInput.value="",this.pressureInput.style.display="none",this.pressureInput.value=""}},m=new class extends c{constructor(){super(),this.nameInput=document.getElementById("name"),this.phoneInput=document.getElementById("phone"),this.dateInput=document.getElementById("date"),this.dateTitle=document.getElementById("dateTitle"),this.bodyMassIndexInput=document.getElementById("bodyMassIndex"),this.dofheartInput=document.getElementById("diseasesOfHeart"),this.pressureInput=document.getElementById("pressure"),this.descriptionInput=document.getElementById("description"),this.ageInput=document.getElementById("age"),this.selectDoctors.addEventListener("change",(()=>{"cardiologist"===this.selectDoctors.options[this.selectDoctors.selectedIndex].value&&this.showCardioFields()}))}showCardioFields(){this.nameInput.style.display="block",this.phoneInput.style.display="block",this.dateInput.style.display="block",this.dateTitle.style.display="block",this.bodyMassIndexInput.style.display="block",this.dofheartInput.style.display="block",this.pressureInput.style.display="block",this.descriptionInput.style.display="block",this.ageInput.style.display="block",this.lastVisitInput.style.display="none",this.lastVisitInput.value=""}},h=new class extends c{constructor(){super(),this.nameInput=document.getElementById("name"),this.phoneInput=document.getElementById("phone"),this.dateInput=document.getElementById("date"),this.dateTitle=document.getElementById("dateTitle"),this.lastVisitInput=document.getElementById("lastVisit"),this.bodyMassIndexInput=document.getElementById("bodyMassIndex"),this.dofheartInput=document.getElementById("diseasesOfHeart"),this.pressureInput=document.getElementById("pressure"),this.descriptionInput=document.getElementById("description"),this.ageInput=document.getElementById("age"),this.selectDoctors.addEventListener("change",(()=>{"dentist"===this.selectDoctors.options[this.selectDoctors.selectedIndex].value&&this.showDentistFields()}))}showDentistFields(){this.nameInput.style.display="block",this.phoneInput.style.display="block",this.dateInput.style.display="block",this.dateTitle.style.display="block",this.lastVisitInput.style.display="block",this.descriptionInput.style.display="block",this.bodyMassIndexInput.style.display="none",this.bodyMassIndexInput.value="",this.dofheartInput.style.display="none",this.dofheartInput.value="",this.pressureInput.style.display="none",this.pressureInput.value="",this.ageInput.style.display="none",this.ageInput.value=""}};function y(t){return function(t){r.textContent="Edit Visit";const e=t.target.closest(".card"),s=e.id;d.dataset.editId=s;const n=[...d.querySelectorAll("input")],a=[...e.querySelectorAll(".card-text span")];n.forEach((t=>{const e=a.find((e=>e.hasAttribute(`data-${t.id}`)));e&&(t.value=e.textContent)})),d.querySelector("option[selected]").selected=!1;const o=a.find((t=>t.hasAttribute("data-doctor"))).dataset.doctor.toLowerCase();d.querySelector(`option[value="${o}"]`).selected=!0,"cardiologist"===o?m.showCardioFields():"dentist"===o?h.showDentistFields():p.showTherapistFields();const i=a.find((t=>t.hasAttribute("data-priority"))).textContent.toLowerCase();function l(t){t.target.closest(".modal-content")||t.target.closest(".btn.card-edit")||(d.querySelector("#clear-btn").click(),d.removeAttribute("data-edit-id"),r.textContent="Create Visit",document.removeEventListener("click",l))}d.querySelector(`#${i}`).checked=!0,setTimeout((()=>{document.addEventListener("click",l)}),200)}}function g(t,e){const s=Object.keys(t);["age","body Mass Index","date","description","diseases Of Heart","last Visit","phone","pressure","priority","purpose","status"].filter((e=>{const n=e.replace(/\s/g,"");return s.includes(n)&&t[n]})).map((s=>{const n=s.replace(/\s/g,""),a=document.createElement("p");a.classList.add("card-text"),a.innerHTML=`<strong>${s[0].toUpperCase()}${s.slice(1)}: </strong><span data-${n}>${t[n]}</span>`,e.append(a);const o=a.querySelector("span");"purpose"===n&&o.classList.add("purpose")}))}const I=new n,b=document.querySelector("h1.display-2.text-center.main_title"),v=new class{constructor(t){this.parent=t}renderCardsSection(){return this.cardsSection=document.createElement("section"),this.cardsSection.classList.add("cards","row","row-cols-1","row-cols-md-2","row-cols-lg-3","g-4","align-items-start"),this.messageEmpty=document.createElement("h2"),this.messageEmpty.classList.add("empty","text-primary","d-none"),this.messageEmpty.textContent="No items have been added",this.messageEmpty.style.textAlign="center",this.parent.after(this.cardsSection),this.parent.after(this.messageEmpty),this.messageEmpty}renderCard(t){const e=document.createElement("div");return e.classList.add("col","wrapper-card"),e.innerHTML=a(t),this.cardsSection.append(e),g(t,e.querySelector(".full-content")),e}async showCards(t,e){const s=await t.getCards(e);if(!(s.length<1))return await s.map((t=>this.renderCard(t)));this.messageEmpty.classList.replace("d-none","d-block")}async deleteCard(t,e){if(t)return await t.forEach((t=>{t.querySelector(".card-del").addEventListener("click",o(e))})),t}async showMore(t){return t&&await t.forEach((t=>{t.querySelector(".show-more").addEventListener("click",i)})),t}async showEditForm(t,e){t&&await t.forEach((t=>{t.querySelector(".btn.card-edit").addEventListener("click",y())}))}async createCard(t,e){const s=await I.createCard(t,e),n=this.renderCard(s);return n.querySelector(".card-del").addEventListener("click",o(t)),n.querySelector(".show-more").addEventListener("click",i),n.querySelector(".btn.card-edit").addEventListener("click",y()),this.messageEmpty.classList.replace("d-block","d-none"),n}async editCard(t,e,s){const n=await I.editCard(t,e,s),d=document.getElementById(e).parentNode;d.innerHTML=a(n),g(n,d.querySelector(".full-content")),d.querySelector(".card-del").addEventListener("click",o(t)),d.querySelector(".show-more").addEventListener("click",i),d.querySelector(".btn.card-edit").addEventListener("click",y())}}(b);let E=localStorage.getItem("token");const f=new class extends t{constructor(t="",e=""){super(t,e)}onSubmit=async function(t){t.preventDefault();try{const t=new n,e=document.querySelector("#input-email"),s=document.querySelector("#floatingPassword"),a=await t.tokenRequest(e.value,s.value);if(!a.ok)throw new Error(`Error ${a.status}: Incorrect username or password`);{E=await a.text(),localStorage.setItem("token",E),localStorage.setItem("email",e.value),localStorage.setItem("password",s.value),localStorage.setItem("autoLogIn",!0),w();const t=document.querySelector("#btn-close-modal");await t.click(),await function(t){return v.renderCardsSection(),v.showCards(I,t).then((e=>v.deleteCard(e,t))).then((t=>v.showMore(t))).then((e=>v.showEditForm(e,t)))}(E)}}catch(t){alert(t.message)}};renderModalLoginContent(){const t=new s("Sign in",this.onSubmit,"signin");return t.renderForms(t.renderFormsLoginContent())}}("modal-sign-in");document.body.prepend(f.renderModal(f.renderModalLoginContent()));const w=function(){document.querySelector(".header__btn-login").classList.add("d-none"),document.querySelector(".header__btn-create-visit").classList.replace("d-none","d-block"),document.querySelector(".header__btn-exit").classList.replace("d-none","d-block"),document.querySelector("#cardsFilter").classList.replace("d-none","d-block"),document.querySelector(".main_title").textContent="Your Visits",document.querySelector("#text-container").classList.add("d-none")};document.addEventListener("DOMContentLoaded",(function(){if(localStorage.getItem("autoLogIn")){w();const t=document.querySelector("#input-email"),e=document.querySelector("#floatingPassword");t.value=localStorage.getItem("email"),e.value=localStorage.getItem("password"),"submit",document.getElementById("submit").click()}})),document.querySelector(".header__btn-exit").addEventListener("click",(()=>{localStorage.clear(),location.reload()})),document.querySelector("#searchBtn");const S=document.querySelector("#resetBtn"),k=document.querySelector("#searchInput"),L=document.querySelector("#selectStatus"),x=document.querySelector("#selectPriority");function C(){Array.from(document.querySelectorAll(".card")).forEach((t=>{const e=t.querySelector(".purpose");t.parentNode.classList.add("d-none"),""===L.value&&""===x.value&&""===k.value.trim()&&t.parentNode.classList.replace("d-none","d-block"),t.dataset.status!==L.value&&""!==L.value||t.dataset.priority!==x.value&&""!==x.value||!e.innerText.toLowerCase().includes(k.value.toLowerCase())&&""!==k.value.trim()||t.parentNode.classList.replace("d-none","d-block")}))}[L,x].forEach((t=>{t.addEventListener("change",C)})),k.addEventListener("input",C),S.addEventListener("click",(()=>{Array.from(document.querySelectorAll(".card")).forEach((t=>{t.parentNode.classList.replace("d-none","d-block"),L.value="",x.value="",k.value=""}))}))})();